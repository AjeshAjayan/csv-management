version: '3.8'

services:
  frontend:
    build:
      context: ./frontend  # Path to the frontend Dockerfile
    ports:
      - "80:80"  # Maps port 80 in the container to port 80 on the host
    depends_on:
      - backend  # Ensures the backend is started first (if needed)

  backend:
    build:
      context: ./backend  # Path to the backend Dockerfile
    ports:
      - "3000:3000"  # Maps port 3000 in the container to port 5000 on the host
    environment:
      - MONGO_URI=mongodb://mongo:27017/mt-products  # Example MongoDB URI (modify as needed)
    depends_on:
      - mongo  # Ensures MongoDB is started first

  mongo:
    image: mongo:latest  # Use the official MongoDB image
    command: ["mongod", "--replSet", "rs0"]  # Start MongoDB with replica set enabled
    ports:
      - "27017:27017"  # Expose MongoDB port
    volumes:
      - mongo-data:/data/db  # Persist MongoDB data
    networks:
      - backend

  mongo-init:
    image: mongo:latest
    command: "bash -c 'sleep 10 && mongo --host mongo --eval \"rs.initiate()\"'"  # Waits for MongoDB to start, then initializes the replica set
    depends_on:
      - mongo
    networks:
      - backend
    restart: "no"  # This container is only needed for initialization

volumes:
  mongo-data:  # Define a volume to store MongoDB data persistently

networks:
  backend:
    driver: bridge
